.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "SEQ192" "1" "December 2023" "" "User manual - Zig's fork"
.SH "NAME"
\fBseq192\fR \- live MIDI sequencer
.SH "SYNOPSIS"
\fBseq192\fR [OPTION\|\.\|\.\|\.]
.SH "DESCRIPTION"
seq192 is a MIDI sequencer for live situations that is meant to be controlled with OSC messages and sync with other applications using jack transport\.
.SH "OPTIONS"
.TP
\fB\-h, \-\-help\fR
Show available options
.TP
\fB\-f, \-\-file\fR \fIfile\fR
Load midi file on startup
.TP
\fB\-c, \-\-config\fR \fIfile\fR
Load config file on startup
.TP
\fB\-p, \-\-osc\-port\fR \fIport\fR
OSC input port (udp port number or unix socket path)
.TP
\fB\-j, \-\-jack\-transport\fR
Sync to jack transport
.TP
\fB\-n, \-\-no\-gui\fR
Enable headless mode
.TP
\fB\-v, \-\-version\fR
Show version and exit
.SH "USER INTERFACE"
Seq192 allows writing and playing MIDI sequences and organizing them in screensets\.
.P
\fBMain window\fR
.P
The main window consist in a toolbar and a sequence grid\.
.IP "\[ci]" 4
The \fBtoolbar\fR contains the following controls
.IP
\fIPanic button\fR: disable all sequences
.br
\fIStop button\fR: stop transport
.br
\fIPlay button\fR: start or restart transport
.br
\fIBpm entry\fR: set beats per minute
.br
\fIScreenset name entry\fR: set name of current screenset
.br
\fIScreenset number entry\fR: select current screenset
.br

.IP "\[ci]" 4
The \fBsequence grid\fR is empty by default\. Right\-clicking in the grid allows creating a new sequence or editing an existing one\. Sequences can be rearranged in the grid by dragging them\. Left\-clicking on a sequence toggles its playing state\. Middle\-clicking on a sequence opens its edit window\. Shift+click defines the sequence as the synchronization reference for queued sequences\. Ctrl+click toggles the sequence's queued state\. The keyboard's arrow keys can be used to navigate accross sequences\.
.IP "" 0
.P
\fBEdit window\fR
.P
The edit window consist in a menu, a toolbar, a pianoroll and an event editor\.
.IP "\[ci]" 4
The \fBtoolbar\fR contains the following controls
.IP
\fISequence name entry\fR: set name of sequence
.br
\fISequence length entries\fR: set number of beats per measure, beat unit and number of measures in sequence
.br
\fISnap button\fR: toggle grid snapping\. Holding \fBalt\fR allows disabling snapping temporarily
.br
\fISnap dropdown\fR: set snapping grid size
.br
\fINote dropdown\fR: set note size
.br
\fIOutput dropdown\fR: set sequence's MIDI port and channel
.br

.IP "\[ci]" 4
The \fBpianoroll\fR responds to the following interactions
.IP
\fILeft click (piano area)\fR: send note to sequence's output
.br
\fILeft click\fR: select note(s)
.br
\fILeft click drag\fR: create a lasso selection or move selection
.br
\fIMiddle click (or ctrl + left click) drag\fR: change note(s) duration
.br
\fIRight click + left click\fR: draw new notes
.br

.IP "\[ci]" 4
The \fBevent editor\fR allows editing the velocity of notes and adding MIDI events like pitch wheel and control changes to the sequences The button on the left allows selecting which event should be shown on the timeline\. The timeline works like in the piano roll, except events dont have a length\. The bottom part is for editing the events' values: handles can be dragged individually, or one can draw a line with a drag\-and\-drop motion to create a linear automation\. Scrolling with the mousewheel on the event editor increments the values of all selected events\.
.IP "" 0
.P
\fBImportant note\fR
.P
Each window has its own undo/redo history:
.IP "" 4
.nf
\- main window: screnset name and sequences (position and content)
\- edit window: MIDI events, sequence name, number of measures and time signature
.fi
.IP "" 0
.SH "JACK TRANSPORT"
When \fB\-\-jack\-transport\fR is set, seq192 will
.IP "" 4
.nf
\- follow start / stop commands from other clients
\- send start / stop commands to other clients
\- use the transport master's bpm
\- set its position to 0 whenever the transport stops or restarts
\- **not** attempt to reposition within sequences
.fi
.IP "" 0
.SH "CONFIGURATION FILE"
The configration file is located in \fB$XDG_CONFIG_HOME/seq192/config\.json\fR (\fB~/\.config/seq192/config\.json\fR by default), but can be loaded from any location using \fB\-\-config\fR\. It allows customizing the following aspects of seq192:
.IP "" 4
.nf
\- MIDI bus names
\- MIDI channel names per bus
\- Sequence colors as css color strings (per bus or per channel )
\- Note names in the piano roll (per bus or per channel)
\- Control names in the event dropdown (per bus or per channel )
.fi
.IP "" 0
.P
\fBExample\fR
.IP "" 4
.nf
{
    "buses": {
        "0": {
            "name": "Sampler",
            "channels": {
                "0": {
                    "name": "Drums",
                    "color": "orange",
                    "notes": {
                        "64": "Kick",
                        "65": "Snare",
                        "66": "Hihat"
                    },
                    "controls": {
                        "1": "Custom cc name ",
                        "2": "Etc"
                    }
                }
            }
        },
        "1": {
            "name": "Bass synth",
            "channels":{
                "0": {"name": "Trap bass"},
                "1": {"name": "Wobble"}
            }
        }
    }
}
.fi
.IP "" 0
.SH "OSC CONTROLS"
.TP
\fB/play\fR
Start playback or restart if already playing
.TP
\fB/stop\fR
Stop playback
.TP
\fB/bpm\fR <float_or_int: bpm>
Set bpm
.TP
\fB/swing\fR <float_or_int: position>
Set swing strength (0: no swing, >0: swing,
.TP
\fB/swing/reference\fR <float_or_int: position>
Set swing reference (8: 8ths will swing, 16: 16th will swing, etc)
.TP
\fB/cursor\fR <float_or_int: position>
Set playhead position (affects all sequences)\. Position is >= 0 and expressed in quarter notes (0 = first beat)
.TP
\fB/screenset\fR <int: screen>
Change active screen set
.TP
\fB/panic\fR
Disable all sequences and cancel queued sequences
.TP
\fB/sequence\fR <string: mode> <int: column> <int: row>
Set sequence(s) state
.br
\fImode\fR: "new", "solo", "on", "off", "toggle", "record", "record_on", "record_off", "through", "sync", "clear", "copy", "cut", "paste", "delete"; only one sequence can be recording at a time; "record_off" mode doesn't require any argument
.br
\fIcolumn\fR: column number on screen set (zero indexed)
.br
\fIrow\fR: row number; if omitted, all rows are affected; multiple rows can be specified
.TP
\fB/sequence\fR <string: mode> <string: name>
Set sequence(s) state
.br
\fIname\fR: sequence name or osc pattern (can match multiple sequence names); multiple names can be specified
.TP
\fB/sequence/queue\fR <string: mode> <int: column> <int: row>
Same as /sequence but affected sequences will change state only on next cycle
.TP
\fB/sequence/trig\fR <string: mode> <int: column> <int: row>
Same as /sequence and (re)start playback
.TP
\fB/sequence/edit\fR <string: edit_mode> <int: column> <int: row> \fIargs\fR
\fImode\fR:
.br
"beats" needs arguments <int: beats per measure> <int: beat unit> <int: number of measures>
.br
"bus_chan" needs arguments
.TP
\fB/sequence/edit\fR <string: edit_mode> <string: name> \fIargs\fR
\fImode\fR: "beats", "bus_chan" (see arguments above)
.TP
\fB/status\fR <string: address>
Send sequencer's status as json, without sequences informations
.br
\fIaddress\fR: \fIosc\.udp://ip:port\fR or \fIosc\.unix:///path/to/socket\fR ; if omitted the response will be sent to the sender
.TP
\fB/status/extended\fR <string: address>
Send sequencer's status as json, including sequences informations
.br

.SH "OSC STATUS"
.nf
{
    "screenset": \fIint\fR,
    "screensetName": "\fIstring\fR",
    "playing": \fIint\fR,
    "bpm": \fIint\fR,
    "tick": \fIint\fR,
    "sequences": [
        {
            "col": \fIint\fR,
            "row": \fIint\fR,
            "name": "\fIstring\fR",
            "time": "\fIstring\fR",
            "bars": \fIint\fR,
            "ticks": \fIint\fR,
            "queued": \fIint\fR,
            "playing": \fIint\fR,
            "timesPlayed": \fIint\fR,
            "recording": \fIint\fR,
            "through": \fIint\fR,
            "bus": \fIint\fR,
            "channel": \fIint\fR
        },
        \|\.\|\.\|\.
    ]
}
.fi
.P
\fBSequencer status\fR
.IP "" 4
.nf
screenset: current screenset
screensetName: current screenset's name
playing: playback state
bpm: current bpm
tick: playback tick (192 ticks = 1 quarter note)
.fi
.IP "" 0
.P
\fBSequences statuses\fR (1 per active sequence in current screenset)
.IP "" 4
.nf
col: column position
row: row position
name: sequence name
time: sequence time signature (eg "4/4")
bars: number of bars in sequence
ticks: sequence length
queued: sequence's queued state
playing: sequence's playing state
timesPlayed: number of times the sequence played since last enabled
recording: sequence's recording state
through: sequence's through state
bus: sequence's output MIDI bus
channel: sequence's output MIDI channel
.fi
.IP "" 0
.SH "AUTHORS"
seq192 is written by Jean\-Emmanuel Doucet and based on
.TP
seq24, written by
Rob C\. Buse, Ivan Hernandez, Guido Scholz, Dana Olson, Jaakko Sipari, Peter Leigh, Anthony Green, Daniel Ellis, Sebastien Alaiwan, Kevin Meinert, Andrea delle Canne
.TP
seq32, written by
Stazed
.SH "COPYRIGHT"
Copyright \(co 2021\-2023 Jean\-Emmanuel Doucet \fIjean\-emmanuel@ammd\.net\fR
.P
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\.
.P
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\. See the GNU General Public License for more details\.
.P
You should have received a copy of the GNU General Public License along with this program\. If not, see \fIhttps://www\.gnu\.org/licenses/\fR\.
.SH "LINKS"
Sources: \fIhttps://github\.com/jean\-emmanuel/seq192\fR
